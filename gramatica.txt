L(ou l): é o conjunto L do automato
N(ou n): é o conjunto N do automato
v(ou V): é o conjunto V do automato

α = {_, a,...,z,A,...,Z}
γ = {TODO O ALFABETO da linguagem} 
κ = {0,...,9}

P = {
	      S -> CMD,
	    CMD -> AtribBnCMD | SpaceCMD | CondCMD | TabCMD | WriteCMD | BnCMD | DeclCMD | ε
	   Decl -> local X | Var Y,
          X -> Var Z,
		  Z -> Bn | W,
		  Y -> Bn | W | = Read Bn,
	 Attrib -> Declna Attrib2
	Attrib2 -> = Attrib3 | , Attrib, Exp
	Attrib3 -> Exp | Read,
	   Cond -> IF,
         IF -> if Exp { Bn CMD } Bn ELSE,
	   ELSE -> else { Bn CMD } Bn | ε
	 Declna -> locar Var | Var,
	Boolean ->  true | false,
	   Read -> io.read(),
	  Write -> io.write(Wexp) Bn,
	   Wexp -> Wexp1,Wexp1 | Wexp1,
	  Wexp1 -> String | Var,
	    Exp -> Uop Exp | Exp1 Bop Exp1 | (Exp) | Exp2,
	   Exp1 -> Uop Exp | (Exp) | Exp2,
	   Exp2 -> Num | Var | Boolean | nil,
	    Uop -> - | !,
	    Bop -> ** | * | / | + | - | > | >= | < | <= | == | & | |,
	     Bn -> \n
	    Var -> αVar2,
	   Var2 -> αVar2 | Num2Var2,
	    Num -> .kNum| .Num2 | k,
	   Num2 -> κnum2 | κ,
	 String -> "STR",
	    STR -> γSTR | ε 
}
